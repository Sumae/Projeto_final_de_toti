{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ale\\\\Desktop\\\\Usuarios\\\\frontend\\\\src\\\\componentes\\\\AuthForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:3001/users';\nexport default function AuthForm() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const [age, setAge] = useState('');\n  const [user, setUser] = useState(null);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [mode, setMode] = useState('login');\n  const [list, setList] = useState('');\n  const fetchUsers = async () => {\n    const res = await fetch(API_URL);\n    const data = await res.json();\n    setUsers(data);\n  };\n  useEffect(() => {\n    if (isAdmin) fetchUsers();\n  }, [isAdmin]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (mode === 'register') {\n      const res = await fetch(API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password,\n          name,\n          age\n        })\n      });\n      if (res.ok) alert('Usuario registrado');\n    } else {\n      const res = await fetch(`${API_URL}?email=${email}&password=${password}`);\n      const data = await res.json();\n      if (data.length > 0) {\n        setUser(data[0]);\n        setIsAdmin(email === 'administrador' && password === '0000');\n      } else {\n        alert('Credenciales inválidas');\n      }\n    }\n  };\n  const updateUser = async () => {\n    const res = await fetch(`${API_URL}/${user.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(user)\n    });\n    if (res.ok) alert('Datos guardados');\n  };\n  const deleteUser = async () => {\n    const res = await fetch(`${API_URL}/${user.id}`, {\n      method: 'DELETE'\n    });\n    if (res.ok) {\n      alert('Usuario eliminado');\n      setUser(null);\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    setIsAdmin(false);\n    setEmail('');\n    setPassword('');\n  };\n  const uploadList = async () => {\n    const lines = list.split('\\n').filter(Boolean);\n    for (let line of lines) {\n      await fetch(API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: `auto${Date.now()}@mail.com`,\n          password: '1234',\n          name: line,\n          age: 0\n        })\n      });\n    }\n    alert('Lista cargada');\n    setList('');\n    fetchUsers();\n  };\n  if (user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Bienvenido \", user.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logout,\n        children: \"Cerrar sesi\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), isAdmin ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Lista de usuarios (admin):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: users.map(u => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [u.name, \" - \", u.email]\n          }, u.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: user.name,\n          onChange: e => setUser({\n            ...user,\n            name: e.target.value\n          }),\n          placeholder: \"Nombre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: user.age,\n          onChange: e => setUser({\n            ...user,\n            age: e.target.value\n          }),\n          placeholder: \"Edad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: user.email,\n          onChange: e => setUser({\n            ...user,\n            email: e.target.value\n          }),\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: user.password,\n          onChange: e => setUser({\n            ...user,\n            password: e.target.value\n          }),\n          placeholder: \"Contrase\\xF1a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: updateUser,\n          children: \"Guardar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), !isAdmin && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: deleteUser,\n          children: \"Eliminar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: mode === 'login' ? 'Iniciar Sesión' : 'Registro'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), mode === 'register' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: name,\n        onChange: e => setName(e.target.value),\n        placeholder: \"Nombre\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: age,\n        onChange: e => setAge(e.target.value),\n        placeholder: \"Edad\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      placeholder: \"Email\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      placeholder: \"Contrase\\xF1a\",\n      type: \"password\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: mode === 'login' ? 'Entrar' : 'Registrar'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: () => setMode(mode === 'login' ? 'register' : 'login'),\n      style: {\n        cursor: 'pointer',\n        color: 'blue'\n      },\n      children: mode === 'login' ? '¿No tienes cuenta? Regístrate' : '¿Ya tienes cuenta? Inicia sesión'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Cargar lista de nombres (uno por l\\xEDnea):\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: list,\n      onChange: e => setList(e.target.value),\n      placeholder: \"Ejemplo:\\\\nJuan\\\\nPedro\\\\nLuc\\xEDa\",\n      rows: 4,\n      cols: 40\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: uploadList,\n      children: \"Cargar lista\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthForm, \"pAnuCZ7CSSjRW5PriAetJhHkFYk=\");\n_c = AuthForm;\nvar _c;\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","AuthForm","_s","email","setEmail","password","setPassword","name","setName","age","setAge","user","setUser","isAdmin","setIsAdmin","users","setUsers","mode","setMode","list","setList","fetchUsers","res","fetch","data","json","handleSubmit","e","preventDefault","method","headers","body","JSON","stringify","ok","alert","length","updateUser","id","deleteUser","logout","uploadList","lines","split","filter","Boolean","line","Date","now","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","u","value","onChange","target","placeholder","onSubmit","required","type","style","cursor","color","rows","cols","_c","$RefreshReg$"],"sources":["C:/Users/Ale/Desktop/Usuarios/frontend/src/componentes/AuthForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst API_URL = 'http://localhost:3001/users';\r\n\r\nexport default function AuthForm() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [age, setAge] = useState('');\r\n  const [user, setUser] = useState(null);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [users, setUsers] = useState([]);\r\n  const [mode, setMode] = useState('login');\r\n  const [list, setList] = useState('');\r\n\r\n  const fetchUsers = async () => {\r\n    const res = await fetch(API_URL);\r\n    const data = await res.json();\r\n    setUsers(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isAdmin) fetchUsers();\r\n  }, [isAdmin]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (mode === 'register') {\r\n      const res = await fetch(API_URL, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, password, name, age })\r\n      });\r\n      if (res.ok) alert('Usuario registrado');\r\n    } else {\r\n      const res = await fetch(`${API_URL}?email=${email}&password=${password}`);\r\n      const data = await res.json();\r\n      if (data.length > 0) {\r\n        setUser(data[0]);\r\n        setIsAdmin(email === 'administrador' && password === '0000');\r\n      } else {\r\n        alert('Credenciales inválidas');\r\n      }\r\n    }\r\n  };\r\n\r\n  const updateUser = async () => {\r\n    const res = await fetch(`${API_URL}/${user.id}`, {\r\n      method: 'PUT',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(user)\r\n    });\r\n    if (res.ok) alert('Datos guardados');\r\n  };\r\n\r\n  const deleteUser = async () => {\r\n    const res = await fetch(`${API_URL}/${user.id}`, { method: 'DELETE' });\r\n    if (res.ok) {\r\n      alert('Usuario eliminado');\r\n      setUser(null);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    setIsAdmin(false);\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  const uploadList = async () => {\r\n    const lines = list.split('\\n').filter(Boolean);\r\n    for (let line of lines) {\r\n      await fetch(API_URL, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email: `auto${Date.now()}@mail.com`, password: '1234', name: line, age: 0 })\r\n      });\r\n    }\r\n    alert('Lista cargada');\r\n    setList('');\r\n    fetchUsers();\r\n  };\r\n\r\n  if (user) {\r\n    return (\r\n      <div>\r\n        <h2>Bienvenido {user.name}</h2>\r\n        <button onClick={logout}>Cerrar sesión</button>\r\n\r\n        {isAdmin ? (\r\n          <div>\r\n            <h3>Lista de usuarios (admin):</h3>\r\n            <ul>\r\n              {users.map(u => (\r\n                <li key={u.id}>{u.name} - {u.email}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <input value={user.name} onChange={e => setUser({ ...user, name: e.target.value })} placeholder=\"Nombre\" />\r\n            <input value={user.age} onChange={e => setUser({ ...user, age: e.target.value })} placeholder=\"Edad\" />\r\n            <input value={user.email} onChange={e => setUser({ ...user, email: e.target.value })} placeholder=\"Email\" />\r\n            <input value={user.password} onChange={e => setUser({ ...user, password: e.target.value })} placeholder=\"Contraseña\" />\r\n            <button onClick={updateUser}>Guardar</button>\r\n            {!isAdmin && (\r\n              <button onClick={deleteUser}>Eliminar</button>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>{mode === 'login' ? 'Iniciar Sesión' : 'Registro'}</h2>\r\n      {mode === 'register' && (\r\n        <>\r\n          <input value={name} onChange={e => setName(e.target.value)} placeholder=\"Nombre\" required />\r\n          <input value={age} onChange={e => setAge(e.target.value)} placeholder=\"Edad\" required />\r\n        </>\r\n      )}\r\n      <input value={email} onChange={e => setEmail(e.target.value)} placeholder=\"Email\" required />\r\n      <input value={password} onChange={e => setPassword(e.target.value)} placeholder=\"Contraseña\" type=\"password\" required />\r\n      <button type=\"submit\">{mode === 'login' ? 'Entrar' : 'Registrar'}</button>\r\n      <p onClick={() => setMode(mode === 'login' ? 'register' : 'login')} style={{ cursor: 'pointer', color: 'blue' }}>\r\n        {mode === 'login' ? '¿No tienes cuenta? Regístrate' : '¿Ya tienes cuenta? Inicia sesión'}\r\n      </p>\r\n\r\n      <hr />\r\n\r\n      <h4>Cargar lista de nombres (uno por línea):</h4>\r\n      <textarea\r\n        value={list}\r\n        onChange={e => setList(e.target.value)}\r\n        placeholder=\"Ejemplo:\\nJuan\\nPedro\\nLucía\"\r\n        rows={4}\r\n        cols={40}\r\n      />\r\n      <br />\r\n      <button type=\"button\" onClick={uploadList}>Cargar lista</button>\r\n    </form>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}